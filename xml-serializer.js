function t(t){return e(t,"")}function e(t,n){const o=t.nodeType;if(1==o){const o=t;n+="<"+o.tagName;for(const t of o.attributes)n+=" "+t.name+'="'+r(t.value)+'"';if(o.hasChildNodes()){n+=">";for(const t of o.childNodes)n=e(t,n);return n+"</"+o.tagName+">"}return n+" />"}if(3==o)return n+r(t.textContent);if(4==o)return n+"<[CDATA["+t.textContent+"]]>";if(7==o){const e=t;return n+"<?"+e.target+" "+e.data+"?>"}if(8==o)return n+"<!--"+t.textContent+"-->";if(9==o||11==o){const r=t;for(const t of r.childNodes)n=e(t,n);return n}if(10==o){const e=t;return n+="<!DOCTYPE "+e.name,e.publicId&&(n+=" "+e.publicId),e.systemId&&(n+=" "+e.systemId),e.internalSubset?n+=" ["+e.internalSubset+"]>":n+=">",n}throw Error("Unexpected node type: "+o)}const n={"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&apos;"};function r(t){return t.replace(/[<>&"']/g,(t=>n[t]))}export{t as serializeToString};
//# sourceMappingURL=xml-serializer.js.map
